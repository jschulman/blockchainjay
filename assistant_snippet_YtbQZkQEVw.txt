const { createFilePath } = require('gatsby-source-filesystem')

exports.onCreateNode = ({ node, getNode, actions }) => {
  const { createNodeField } = actions

  if (node.internal.type === 'MarkdownRemark') {
    const slug = createFilePath({ node, getNode, basePath: 'pages' })
    createNodeField({
      node,
      name: 'slug',
      value: slug,
    })

    // Create categorySlug field
    if (node.frontmatter.category) {
      createNodeField({
        node,
        name: 'categorySlug',
        value: `/category/${node.frontmatter.category.toLowerCase()}/`,
      })
    }

    // Debug log for audio posts
    if (node.frontmatter.audio) {
      console.log('Processing audio post:', {
        title: node.frontmatter.title,
        attachments: node.frontmatter.attachments,
        template: node.frontmatter.template,
        slug: slug
      })
    }
  }
}

// Add schema customization for audio posts
exports.createSchemaCustomization = ({ actions }) => {
  const { createTypes } = actions
  const typeDefs = `
    type MarkdownRemark implements Node {
      frontmatter: Frontmatter
    }
    type Frontmatter {
      title: String!
      date: Date @dateformat
      template: String
      draft: Boolean
      audio: Boolean
      slug: String
      category: String
      description: String
      attachments: [File] @fileByRelativePath
    }
  `
  createTypes(typeDefs)
} 